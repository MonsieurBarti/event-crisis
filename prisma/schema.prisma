// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id                    String   @id @default(uuid())
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  playerId              String
  currentBudget         Int
  selectedBriefId       String?
  selectedVenueId       String?
  selectedConceptId     String?
  selectedConstraintId  String?
  selectedEntertainmentId String?
  selectedCateringId    String?
  resolvedIssueIds      String?  // JSON array of IDs
  resolvedIssueOptionIds String? // JSON array of option IDs
  finalStrategyType     String?  // CREATIVE, PRACTICAL, BALANCED
  finalScore            Int?
  isCompleted           Boolean  @default(false)
  
  // Relations
  brief             Brief?           @relation(fields: [selectedBriefId], references: [id])
  venue             Venue?           @relation(fields: [selectedVenueId], references: [id])
  concept           Concept?         @relation(fields: [selectedConceptId], references: [id])
  constraint        Constraint?      @relation(fields: [selectedConstraintId], references: [id])
  entertainment     Entertainment?   @relation(fields: [selectedEntertainmentId], references: [id])
  catering          Catering?        @relation(fields: [selectedCateringId], references: [id])
  chatMessages      ChatMessage[]
}

model Brief {
  id          String  @id @default(uuid())
  title       String
  description String
  budget      Int
  imageUrl    String?
  games       Game[]
}

model Venue {
  id          String  @id @default(uuid())
  name        String
  description String
  capacity    Int
  cost        Int
  imageUrl    String?
  games       Game[]
}

model Concept {
  id          String  @id @default(uuid())
  name        String
  description String
  cost        Int
  imageUrl    String?
  games       Game[]
}

model Constraint {
  id          String  @id @default(uuid())
  name        String
  description String
  impact      Int    // Negative number representing budget reduction
  imageUrl    String?
  games       Game[]
}

model Entertainment {
  id          String  @id @default(uuid())
  name        String
  description String
  cost        Int
  imageUrl    String?
  games       Game[]
}

model Catering {
  id          String  @id @default(uuid())
  name        String
  description String
  cost        Int
  perPersonCost Int
  minimumPeople Int
  imageUrl    String?
  games       Game[]
}

model UnexpectedIssue {
  id          String  @id @default(uuid())
  title       String
  description String
  options     UnexpectedIssueOption[]
}

model UnexpectedIssueOption {
  id                String  @id @default(uuid())
  description       String
  budgetImpact      Int
  unexpectedIssueId String
  unexpectedIssue   UnexpectedIssue @relation(fields: [unexpectedIssueId], references: [id])
}

model ChatMessage {
  id             String    @id @default(uuid())
  conversationId String
  gameId         String?
  playerId       String
  content        String
  timestamp      DateTime  @default(now())
  isFromUser     Boolean   @default(true)
  
  // Relations
  game           Game?     @relation(fields: [gameId], references: [id])
}
